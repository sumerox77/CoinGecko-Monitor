/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cryptogui;

import com.mycompany.cryptogui.apiclient.CoinGeckoApiClient;
import com.mycompany.cryptogui.apiclient.constant.Currency;
import com.mycompany.cryptogui.apiclient.domain.Coins.CoinFullData;
import com.mycompany.cryptogui.apiclient.domain.Coins.MarketChart;
import com.mycompany.cryptogui.apiclient.domain.Search.Trending;
import com.mycompany.cryptogui.apiclient.impl.CoinGeckoApiClientImpl;
import com.mycompany.cryptogui.dbconnector.DatabaseConnector;
import com.mycompany.cryptogui.favourite.FavouriteManager;
import com.mycompany.cryptogui.favourite.FavoutireEntity;
import com.mycompany.cryptogui.notificationdaemon.NotifierDaemon;
import com.mycompany.cryptogui.triggers.TriggerEntity;
import com.mycompany.cryptogui.triggers.TriggerManager;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import org.knowm.xchart.QuickChart;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;

import javax.swing.*;
import java.awt.*;
import java.util.List;

import static java.lang.String.valueOf;


/**
 *
 * @author Andrii Tochylin
 */
public class CryptoGui extends javax.swing.JFrame {

    private final TriggerManager triggerManager;
    private final NotifierDaemon notifierDaemon;
    private final CoinGeckoApiClient client = new CoinGeckoApiClientImpl();
    private final DatabaseConnector databaseConnector;
    private final FavouriteManager favoutireManager;


    /**
     * Creates new form CryptoGui
     */
    public CryptoGui() {
        initComponents();
        setTitle("Coingecko Desktop Application. Pre-alpha 0.0.1");
        setUpMainPage();
        cryptoPopularContainer8.setVisible(false);
        AutoCompleteDecorator.decorate(jComboBox1); // SEARCH BAR
        triggerManager = new TriggerManager();//
        favoutireManager = new FavouriteManager();
        notifierDaemon = new NotifierDaemon(triggerManager, new CoinGeckoApiClientImpl(), true);
        new Thread(notifierDaemon).start();
        databaseConnector = new DatabaseConnector();
        redrawTriggers();
        redrawFavourite();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRoot = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        menuPopularPanel = new javax.swing.JPanel();
        menuPopularPanelInnerHeader = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        popularCryptoPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        cryptoPopularContainer12 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        cryptoPopularContainer10 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        cryptoPopularContainer14 = new javax.swing.JPanel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        cryptoPopularContainer13 = new javax.swing.JPanel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        cryptoPopularContainer16 = new javax.swing.JPanel();
        jLabel105 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        cryptoPopularContainer11 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        cryptoPopularContainer15 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        menuSearchPanel = new javax.swing.JPanel();
        menuSearchPanelInnerHeader = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        cryptoPopularContainer8 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanelChartSearch = new javax.swing.JPanel();
        menuFavouritePanel = new javax.swing.JPanel();
        menuFavouritePanelInnerHeader = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        favouritePanelBoard = new javax.swing.JPanel();
        menuTriggersPanel = new javax.swing.JPanel();
        menuTriggersPanelInnerHeader = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        triggersPanelText = new javax.swing.JLabel();
        triggersPanelLowerBound_info = new javax.swing.JLabel();
        triggersPanelLowerBound_input = new javax.swing.JTextField();
        triggersPanelUpperBound_info = new javax.swing.JLabel();
        triggersPanelUpperBound_input = new javax.swing.JTextField();
        triggersPanelCoinID_info = new javax.swing.JLabel();
        triggersPanelCoinID_input = new javax.swing.JTextField();
        triggersPanelNotificationBoard = new javax.swing.JPanel();
        addNotificationToNotificationBoard = new javax.swing.JButton();
        menuSettingsPanel = new javax.swing.JPanel();
        menuSettingsPanelInnerHeader = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlRoot.setMinimumSize(new java.awt.Dimension(1400, 700));
        pnlRoot.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setBounds(new java.awt.Rectangle(100, 0, 100, 100));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(360, 360));
        jTabbedPane1.setName(""); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(100, 100));

        menuPopularPanel.setLayout(new java.awt.BorderLayout());

        menuPopularPanelInnerHeader.setBackground(new java.awt.Color(204, 255, 204));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel8.setText("POPULAR PANEL");

        javax.swing.GroupLayout menuPopularPanelInnerHeaderLayout = new javax.swing.GroupLayout(menuPopularPanelInnerHeader);
        menuPopularPanelInnerHeader.setLayout(menuPopularPanelInnerHeaderLayout);
        menuPopularPanelInnerHeaderLayout.setHorizontalGroup(
            menuPopularPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1282, Short.MAX_VALUE)
            .addGroup(menuPopularPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPopularPanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 1270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        menuPopularPanelInnerHeaderLayout.setVerticalGroup(
            menuPopularPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
            .addGroup(menuPopularPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPopularPanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        menuPopularPanel.add(menuPopularPanelInnerHeader, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setEnabled(false);

        jLabel50.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel50.setText("Crypto Name: ");

        jLabel63.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://assets.coingecko.com/coins/images/25380/large/UUSD.jpg?1651823371")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel75.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel75.setText("Hashing Algorythm: ");

        jLabel76.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel76.setText("Market Capacity Rank:");

        jLabel77.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel77.setText("Subreddit URL:");

        jLabel78.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel78.setText("Trust Score:");

        jLabel79.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel79.setText("Price Change Percentage: ");

        jLabel57.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout cryptoPopularContainer12Layout = new javax.swing.GroupLayout(cryptoPopularContainer12);
        cryptoPopularContainer12.setLayout(cryptoPopularContainer12Layout);
        cryptoPopularContainer12Layout.setHorizontalGroup(
            cryptoPopularContainer12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer12Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(cryptoPopularContainer12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cryptoPopularContainer12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(cryptoPopularContainer12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cryptoPopularContainer12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel76, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel77, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cryptoPopularContainer12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel75, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jLabel50, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cryptoPopularContainer12Layout.createSequentialGroup()
                        .addComponent(jLabel79)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        cryptoPopularContainer12Layout.setVerticalGroup(
            cryptoPopularContainer12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer12Layout.createSequentialGroup()
                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel77)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cryptoPopularContainer12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel46.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel46.setText("Crypto Name: ");

        jLabel47.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://assets.coingecko.com/coins/images/25380/large/UUSD.jpg?1651823371")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel64.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel64.setText("Hashing Algorythm: ");

        jLabel65.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel65.setText("Market Capacity Rank:");

        jLabel66.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel66.setText("Subreddit URL:");

        jLabel67.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel67.setText("Trust Score:");

        jLabel68.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel68.setText("Price Change Percentage: ");

        jLabel81.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout cryptoPopularContainer10Layout = new javax.swing.GroupLayout(cryptoPopularContainer10);
        cryptoPopularContainer10.setLayout(cryptoPopularContainer10Layout);
        cryptoPopularContainer10Layout.setHorizontalGroup(
            cryptoPopularContainer10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer10Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(cryptoPopularContainer10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cryptoPopularContainer10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(cryptoPopularContainer10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cryptoPopularContainer10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel65, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel66, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cryptoPopularContainer10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel64, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cryptoPopularContainer10Layout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel81, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        cryptoPopularContainer10Layout.setVerticalGroup(
            cryptoPopularContainer10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer10Layout.createSequentialGroup()
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel66)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cryptoPopularContainer10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel90.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel90.setText("Crypto Name: ");

        jLabel91.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://assets.coingecko.com/coins/images/25380/large/UUSD.jpg?1651823371")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel92.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel92.setText("Hashing Algorythm: ");

        jLabel93.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel93.setText("Market Capacity Rank:");

        jLabel94.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel94.setText("Subreddit URL:");

        jLabel95.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel95.setText("Trust Score:");

        jLabel96.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel96.setText("Price Change Percentage: ");

        jLabel97.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout cryptoPopularContainer14Layout = new javax.swing.GroupLayout(cryptoPopularContainer14);
        cryptoPopularContainer14.setLayout(cryptoPopularContainer14Layout);
        cryptoPopularContainer14Layout.setHorizontalGroup(
            cryptoPopularContainer14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer14Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(cryptoPopularContainer14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cryptoPopularContainer14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(cryptoPopularContainer14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cryptoPopularContainer14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel93, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel94, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cryptoPopularContainer14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel92, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jLabel90, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cryptoPopularContainer14Layout.createSequentialGroup()
                        .addComponent(jLabel96)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel97, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        cryptoPopularContainer14Layout.setVerticalGroup(
            cryptoPopularContainer14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer14Layout.createSequentialGroup()
                .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel90)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel94)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cryptoPopularContainer14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel82.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel82.setText("Crypto Name: ");

        jLabel83.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://assets.coingecko.com/coins/images/25380/large/UUSD.jpg?1651823371")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel84.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel84.setText("Hashing Algorythm: ");

        jLabel85.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel85.setText("Market Capacity Rank:");

        jLabel86.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel86.setText("Subreddit URL:");

        jLabel87.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel87.setText("Trust Score:");

        jLabel88.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel88.setText("Price Change Percentage: ");

        jLabel89.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout cryptoPopularContainer13Layout = new javax.swing.GroupLayout(cryptoPopularContainer13);
        cryptoPopularContainer13.setLayout(cryptoPopularContainer13Layout);
        cryptoPopularContainer13Layout.setHorizontalGroup(
            cryptoPopularContainer13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer13Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(cryptoPopularContainer13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cryptoPopularContainer13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(cryptoPopularContainer13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cryptoPopularContainer13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel85, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel86, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cryptoPopularContainer13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel84, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jLabel82, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cryptoPopularContainer13Layout.createSequentialGroup()
                        .addComponent(jLabel88)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        cryptoPopularContainer13Layout.setVerticalGroup(
            cryptoPopularContainer13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer13Layout.createSequentialGroup()
                .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel82)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel86)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cryptoPopularContainer13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel105.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel105.setText("Crypto Name: ");

        jLabel106.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://assets.coingecko.com/coins/images/25380/large/UUSD.jpg?1651823371")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel107.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel107.setText("Hashing Algorythm: ");

        jLabel108.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel108.setText("Market Capacity Rank:");

        jLabel109.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel109.setText("Subreddit URL:");

        jLabel110.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel110.setText("Trust Score:");

        jLabel111.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel111.setText("Price Change Percentage: ");

        jLabel112.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout cryptoPopularContainer16Layout = new javax.swing.GroupLayout(cryptoPopularContainer16);
        cryptoPopularContainer16.setLayout(cryptoPopularContainer16Layout);
        cryptoPopularContainer16Layout.setHorizontalGroup(
            cryptoPopularContainer16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer16Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(cryptoPopularContainer16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cryptoPopularContainer16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(cryptoPopularContainer16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cryptoPopularContainer16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel108, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel109, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cryptoPopularContainer16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel107, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jLabel105, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cryptoPopularContainer16Layout.createSequentialGroup()
                        .addComponent(jLabel111)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel112, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        cryptoPopularContainer16Layout.setVerticalGroup(
            cryptoPopularContainer16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer16Layout.createSequentialGroup()
                .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel105)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel109)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cryptoPopularContainer16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel48.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel48.setText("Crypto Name: ");

        jLabel49.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://assets.coingecko.com/coins/images/25380/large/UUSD.jpg?1651823371")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel70.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel70.setText("Hashing Algorythm: ");

        jLabel71.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel71.setText("Market Capacity Rank:");

        jLabel72.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel72.setText("Subreddit URL:");

        jLabel73.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel73.setText("Trust Score:");

        jLabel74.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel74.setText("Price Change Percentage: ");

        jLabel104.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout cryptoPopularContainer11Layout = new javax.swing.GroupLayout(cryptoPopularContainer11);
        cryptoPopularContainer11.setLayout(cryptoPopularContainer11Layout);
        cryptoPopularContainer11Layout.setHorizontalGroup(
            cryptoPopularContainer11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer11Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(cryptoPopularContainer11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cryptoPopularContainer11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(cryptoPopularContainer11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cryptoPopularContainer11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel71, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel72, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cryptoPopularContainer11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel70, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cryptoPopularContainer11Layout.createSequentialGroup()
                        .addComponent(jLabel74)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel104, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        cryptoPopularContainer11Layout.setVerticalGroup(
            cryptoPopularContainer11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer11Layout.createSequentialGroup()
                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel72)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cryptoPopularContainer11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel104, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel56.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel56.setText("Crypto Name: ");

        jLabel69.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://assets.coingecko.com/coins/images/25380/large/UUSD.jpg?1651823371")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel98.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel98.setText("Hashing Algorythm: ");

        jLabel99.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel99.setText("Market Capacity Rank:");

        jLabel100.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel100.setText("Subreddit URL:");

        jLabel101.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel101.setText("Trust Score:");

        jLabel102.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel102.setText("Price Change Percentage: ");

        jLabel103.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout cryptoPopularContainer15Layout = new javax.swing.GroupLayout(cryptoPopularContainer15);
        cryptoPopularContainer15.setLayout(cryptoPopularContainer15Layout);
        cryptoPopularContainer15Layout.setHorizontalGroup(
            cryptoPopularContainer15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer15Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(cryptoPopularContainer15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cryptoPopularContainer15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(cryptoPopularContainer15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cryptoPopularContainer15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel99, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel100, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cryptoPopularContainer15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel98, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jLabel56, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel101, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cryptoPopularContainer15Layout.createSequentialGroup()
                        .addComponent(jLabel102)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel103, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        cryptoPopularContainer15Layout.setVerticalGroup(
            cryptoPopularContainer15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer15Layout.createSequentialGroup()
                .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel56)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel98, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel100)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cryptoPopularContainer15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel102, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel103, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel101, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(cryptoPopularContainer12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(cryptoPopularContainer10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(cryptoPopularContainer14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(cryptoPopularContainer13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(cryptoPopularContainer16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(cryptoPopularContainer11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(cryptoPopularContainer15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cryptoPopularContainer14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cryptoPopularContainer13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cryptoPopularContainer12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cryptoPopularContainer10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cryptoPopularContainer16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cryptoPopularContainer11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cryptoPopularContainer15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(920, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel3);

        javax.swing.GroupLayout popularCryptoPanelLayout = new javax.swing.GroupLayout(popularCryptoPanel);
        popularCryptoPanel.setLayout(popularCryptoPanelLayout);
        popularCryptoPanelLayout.setHorizontalGroup(
            popularCryptoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(popularCryptoPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1243, Short.MAX_VALUE)
                .addContainerGap())
        );
        popularCryptoPanelLayout.setVerticalGroup(
            popularCryptoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(popularCryptoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuPopularPanel.add(popularCryptoPanel, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("POPULAR", menuPopularPanel);

        menuSearchPanel.setLayout(new java.awt.BorderLayout());

        menuSearchPanelInnerHeader.setBackground(new java.awt.Color(204, 255, 204));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel9.setText("SEARCH PANEL");

        javax.swing.GroupLayout menuSearchPanelInnerHeaderLayout = new javax.swing.GroupLayout(menuSearchPanelInnerHeader);
        menuSearchPanelInnerHeader.setLayout(menuSearchPanelInnerHeaderLayout);
        menuSearchPanelInnerHeaderLayout.setHorizontalGroup(
            menuSearchPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
            .addGroup(menuSearchPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuSearchPanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 1278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        menuSearchPanelInnerHeaderLayout.setVerticalGroup(
            menuSearchPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
            .addGroup(menuSearchPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuSearchPanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        menuSearchPanel.add(menuSearchPanelInnerHeader, java.awt.BorderLayout.PAGE_START);

        jButton1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButton1.setText("🔍");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel41.setText("Crypto Name: ");

        jLabel42.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://assets.coingecko.com/coins/images/25380/large/UUSD.jpg?1651823371")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel45.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel45.setText("Hashing Algorythm: ");

        jLabel51.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel51.setText("Market Capacity Rank:");

        jLabel52.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel52.setText("Subreddit URL:");

        jLabel53.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel53.setText("Trust Score:");

        jLabel54.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel54.setText("Price Change Percentage: ");

        jLabel55.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        jLabel62.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel62.setText("Crypto ID:");

        jButton2.setText("❤");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cryptoPopularContainer8Layout = new javax.swing.GroupLayout(cryptoPopularContainer8);
        cryptoPopularContainer8.setLayout(cryptoPopularContainer8Layout);
        cryptoPopularContainer8Layout.setHorizontalGroup(
            cryptoPopularContainer8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer8Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(cryptoPopularContainer8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cryptoPopularContainer8Layout.createSequentialGroup()
                        .addGroup(cryptoPopularContainer8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(cryptoPopularContainer8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel51, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel52, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(cryptoPopularContainer8Layout.createSequentialGroup()
                                    .addComponent(jLabel54)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(cryptoPopularContainer8Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(cryptoPopularContainer8Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(cryptoPopularContainer8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel62)
                            .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(956, 956, 956))))
        );
        cryptoPopularContainer8Layout.setVerticalGroup(
            cryptoPopularContainer8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cryptoPopularContainer8Layout.createSequentialGroup()
                .addGroup(cryptoPopularContainer8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cryptoPopularContainer8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel52)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cryptoPopularContainer8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jComboBox1.setEditable(true);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "bitcoin", "ethereum", "monero" }));
        jComboBox1.setActionCommand("");

        jPanelChartSearch.setBackground(new java.awt.Color(255, 204, 204));
        jPanelChartSearch.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(434, 434, 434)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(491, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cryptoPopularContainer8, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelChartSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cryptoPopularContainer8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelChartSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        menuSearchPanel.add(jPanel2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("SEARCH", menuSearchPanel);

        menuFavouritePanel.setLayout(new java.awt.BorderLayout());

        menuFavouritePanelInnerHeader.setBackground(new java.awt.Color(204, 255, 204));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel10.setText("FAVOURITE PANEL");

        javax.swing.GroupLayout menuFavouritePanelInnerHeaderLayout = new javax.swing.GroupLayout(menuFavouritePanelInnerHeader);
        menuFavouritePanelInnerHeader.setLayout(menuFavouritePanelInnerHeaderLayout);
        menuFavouritePanelInnerHeaderLayout.setHorizontalGroup(
            menuFavouritePanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
            .addGroup(menuFavouritePanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuFavouritePanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 1278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        menuFavouritePanelInnerHeaderLayout.setVerticalGroup(
            menuFavouritePanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
            .addGroup(menuFavouritePanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuFavouritePanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        menuFavouritePanel.add(menuFavouritePanelInnerHeader, java.awt.BorderLayout.PAGE_START);

        favouritePanelBoard.setMaximumSize(new java.awt.Dimension(1600, 600));
        favouritePanelBoard.setLayout(new javax.swing.BoxLayout(favouritePanelBoard, BoxLayout.Y_AXIS));
        menuFavouritePanel.add(favouritePanelBoard, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("FAVOURITE", menuFavouritePanel);

        menuTriggersPanel.setLayout(new java.awt.BorderLayout());

        menuTriggersPanelInnerHeader.setBackground(new java.awt.Color(204, 255, 204));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel11.setText("TRIGGERS PANEL");

        javax.swing.GroupLayout menuTriggersPanelInnerHeaderLayout = new javax.swing.GroupLayout(menuTriggersPanelInnerHeader);
        menuTriggersPanelInnerHeader.setLayout(menuTriggersPanelInnerHeaderLayout);
        menuTriggersPanelInnerHeaderLayout.setHorizontalGroup(
            menuTriggersPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
            .addGroup(menuTriggersPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuTriggersPanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 1278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        menuTriggersPanelInnerHeaderLayout.setVerticalGroup(
            menuTriggersPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
            .addGroup(menuTriggersPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuTriggersPanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(13, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        menuTriggersPanel.add(menuTriggersPanelInnerHeader, java.awt.BorderLayout.PAGE_START);

        jPanel4.setPreferredSize(new java.awt.Dimension(100, 100));

        triggersPanelText.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        triggersPanelText.setText("Notification Sender for changes in Coins' Price:");

        triggersPanelLowerBound_info.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        triggersPanelLowerBound_info.setText("Lower Bound:");

        triggersPanelUpperBound_info.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        triggersPanelUpperBound_info.setText("Upper Bound:");

        triggersPanelCoinID_info.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        triggersPanelCoinID_info.setText("Coin ID:");

        triggersPanelNotificationBoard.setBackground(new java.awt.Color(244, 244, 244));
        triggersPanelNotificationBoard.setLayout(new javax.swing.BoxLayout(triggersPanelNotificationBoard, javax.swing.BoxLayout.Y_AXIS));

        addNotificationToNotificationBoard.setText("ADD");
        addNotificationToNotificationBoard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNotificationToNotificationBoardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(triggersPanelText, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(triggersPanelCoinID_info)
                        .addGap(18, 18, 18)
                        .addComponent(triggersPanelCoinID_input, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(triggersPanelLowerBound_info, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(triggersPanelLowerBound_input, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(triggersPanelUpperBound_info)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(triggersPanelUpperBound_input, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(addNotificationToNotificationBoard)))
                .addContainerGap(397, Short.MAX_VALUE))
            .addComponent(triggersPanelNotificationBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(triggersPanelText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(triggersPanelUpperBound_info)
                        .addComponent(triggersPanelUpperBound_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(triggersPanelLowerBound_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(triggersPanelCoinID_info, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(triggersPanelCoinID_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(triggersPanelLowerBound_info)
                        .addComponent(addNotificationToNotificationBoard)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(triggersPanelNotificationBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuTriggersPanel.add(jPanel4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("TRIGGERS", menuTriggersPanel);

        menuSettingsPanel.setLayout(new java.awt.BorderLayout());

        menuSettingsPanelInnerHeader.setBackground(new java.awt.Color(204, 255, 204));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel12.setText("SETTINGS PANEL");

        javax.swing.GroupLayout menuSettingsPanelInnerHeaderLayout = new javax.swing.GroupLayout(menuSettingsPanelInnerHeader);
        menuSettingsPanelInnerHeader.setLayout(menuSettingsPanelInnerHeaderLayout);
        menuSettingsPanelInnerHeaderLayout.setHorizontalGroup(
            menuSettingsPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
            .addGroup(menuSettingsPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuSettingsPanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 1278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        menuSettingsPanelInnerHeaderLayout.setVerticalGroup(
            menuSettingsPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
            .addGroup(menuSettingsPanelInnerHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuSettingsPanelInnerHeaderLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        menuSettingsPanel.add(menuSettingsPanelInnerHeader, java.awt.BorderLayout.PAGE_START);

        jCheckBox1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Notifications");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1144, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jCheckBox1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuSettingsPanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("SETTINGS", menuSettingsPanel);

        pnlRoot.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlRoot, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void setUpMainPage()
    {
        // TODO:
        // MAIN PAGE ADD INFO
        Trending tr = client.getTrending();
/*---------------------------------------------------------------------------------------------------------------------*/
        jLabel50.setText("Coin Full Name: "+tr.getCoins().get(0).getItem().getName());
        jLabel75.setText("Coin ID: "+tr.getCoins().get(0).getItem().getId());
        jLabel63.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                            new java.net.URL(tr.getCoins().get(0).getItem().getLarge())
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel76.setText("Market Capacity Rank: " + tr.getCoins().get(0).getItem().getMarketCapRank());
//        jLabel79.setText(String.valueOf(coinFullData.getMarketData().getPriceChangePercentage24h())+"%");

        final String hashingAlgorithm = client.getCoinById(tr.getCoins().get(0).getItem().getId()).getHashingAlgorithm();
        final double priceChangePercenta24h_1 = client.getCoinById(tr.getCoins().get(0).getItem().getId()).getMarketData().getPriceChangePercentage24h();
        final String trustScore_1 = client.getCoinById(tr.getCoins().get(0).getItem().getId()).getTickers().get(0).getTrustScore();
        if(hashingAlgorithm != null)
        {
            jLabel77.setText("Hashing Algorithm: " + hashingAlgorithm);
        }
        else
        {
            jLabel77.setText("Hashing Algorithm is not described");
        }

        jLabel57.setText(priceChangePercenta24h_1 +"%");
        if(priceChangePercenta24h_1 <= 0)
        {
            jLabel57.setForeground(Color.RED);
        }else if(priceChangePercenta24h_1 > 0)
        {
            jLabel57.setForeground(new Color(0, 128, 0));
        }
        jLabel78.setText("Trust Score: "+ trustScore_1.toUpperCase());

/*---------------------------------------------------------------------------------------------------------------------*/

        jLabel46.setText("Coin Full Name: "+tr.getCoins().get(1).getItem().getName());
        jLabel64.setText("Coin ID: "+tr.getCoins().get(1).getItem().getId());
        // SECOND EL IMG
        jLabel47.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                            new java.net.URL(tr.getCoins().get(1).getItem().getLarge())
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel65.setText("Market Capacity Rank: " + tr.getCoins().get(1).getItem().getMarketCapRank());

        final String hashingAlgorithmSECOND = client.getCoinById(tr.getCoins().get(1).getItem().getId()).getHashingAlgorithm();
        final double priceChangePercenta24h_2 = client.getCoinById(tr.getCoins().get(1).getItem().getId()).getMarketData().getPriceChangePercentage24h();
        final String trustScore_2 = client.getCoinById(tr.getCoins().get(1).getItem().getId()).getTickers().get(0).getTrustScore();
        if(hashingAlgorithmSECOND != null)
        {
            jLabel66.setText("Hashing Algorithm: " + hashingAlgorithmSECOND);
        }
        else
        {
            jLabel66.setText("Hashing Algorithm is not described");
        }

        jLabel81.setText(priceChangePercenta24h_2 +"%");
        if(priceChangePercenta24h_2 <= 0)
        {
            jLabel81.setForeground(Color.RED);
        }else if(priceChangePercenta24h_2 > 0)
        {
            jLabel81.setForeground(new Color(0, 128, 0));
        }
        jLabel67.setText("Trust Score: "+ trustScore_2.toUpperCase());
/*---------------------------------------------------------------------------------------------------------------------*/

        jLabel90.setText("Coin Full Name: "+tr.getCoins().get(2).getItem().getName());
        jLabel92.setText("Coin ID: "+tr.getCoins().get(2).getItem().getId());
        // third EL IMG
        jLabel91.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                            new java.net.URL(tr.getCoins().get(2).getItem().getLarge())
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());


        jLabel93.setText("Market Capacity Rank: " + tr.getCoins().get(2).getItem().getMarketCapRank());

        final String hashingAlgorithmTHIRD = client.getCoinById(tr.getCoins().get(2).getItem().getId()).getHashingAlgorithm();
        final double priceChangePercenta24h_3 = client.getCoinById(tr.getCoins().get(2).getItem().getId()).getMarketData().getPriceChangePercentage24h();
        final String trustScore_3 = client.getCoinById(tr.getCoins().get(2).getItem().getId()).getTickers().get(0).getTrustScore();
        if(hashingAlgorithmTHIRD != null)
        {
            jLabel94.setText("Hashing Algorithm: " + hashingAlgorithmTHIRD);
        }
        else
        {
            jLabel94.setText("Hashing Algorithm is not described");
        }

        jLabel97.setText(priceChangePercenta24h_3 +"%");
        if(priceChangePercenta24h_3 <= 0)
        {
            jLabel97.setForeground(Color.RED);
        }else if(priceChangePercenta24h_3 > 0)
        {
            jLabel97.setForeground(new Color(0, 128, 0));
        }
        jLabel95.setText("Trust Score: "+ trustScore_3.toUpperCase());


/*---------------------------------------------------------------------------------------------------------------------*/

        // 4 EL IMG

        jLabel82.setText("Coin Full Name: "+tr.getCoins().get(3).getItem().getName());
        jLabel84.setText("Coin ID: "+tr.getCoins().get(3).getItem().getId());

        jLabel83.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                            new java.net.URL(tr.getCoins().get(3).getItem().getLarge())
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel85.setText("Market Capacity Rank: " + tr.getCoins().get(3).getItem().getMarketCapRank());

        final String hashingAlgorithmFOURTH = client.getCoinById(tr.getCoins().get(3).getItem().getId()).getHashingAlgorithm();
        final double priceChangePercenta24h_4 = client.getCoinById(tr.getCoins().get(3).getItem().getId()).getMarketData().getPriceChangePercentage24h();
        final String trustScore_4 = client.getCoinById(tr.getCoins().get(3).getItem().getId()).getTickers().get(0).getTrustScore();
        if(hashingAlgorithmFOURTH != null)
        {
            jLabel86.setText("Hashing Algorithm: " + hashingAlgorithmFOURTH);
        }
        else
        {
            jLabel86.setText("Hashing Algorithm is not described");
        }

        jLabel89.setText(priceChangePercenta24h_4 +"%");
        if(priceChangePercenta24h_4 <= 0)
        {
            jLabel89.setForeground(Color.RED);
        }else if(priceChangePercenta24h_4 > 0)
        {
            jLabel89.setForeground(new Color(0, 128, 0));
        }
        jLabel87.setText("Trust Score: "+ trustScore_4.toUpperCase());





/*---------------------------------------------------------------------------------------------------------------------*/

        // 5 EL IMG
        jLabel105.setText("Coin Full Name: "+tr.getCoins().get(4).getItem().getName());
        jLabel107.setText("Coin ID: "+tr.getCoins().get(4).getItem().getId());
        jLabel106.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                            new java.net.URL(tr.getCoins().get(4).getItem().getLarge())
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel108.setText("Market Capacity Rank: " + tr.getCoins().get(4).getItem().getMarketCapRank());

        final String hashingAlgorithmFIFTH = client.getCoinById(tr.getCoins().get(4).getItem().getId()).getHashingAlgorithm();
        final double priceChangePercenta24h_5 = client.getCoinById(tr.getCoins().get(4).getItem().getId()).getMarketData().getPriceChangePercentage24h();
        final String trustScore_5 = client.getCoinById(tr.getCoins().get(4).getItem().getId()).getTickers().get(0).getTrustScore();
        if(hashingAlgorithmFIFTH != null)
        {
            jLabel109.setText("Hashing Algorithm: " + hashingAlgorithmFIFTH);
        }
        else
        {
            jLabel109.setText("Hashing Algorithm is not described");
        }

        jLabel112.setText(priceChangePercenta24h_5 +"%");
        if(priceChangePercenta24h_5 <= 0)
        {
            jLabel112.setForeground(Color.RED);
        }else if(priceChangePercenta24h_5 > 0)
        {
            jLabel112.setForeground(new Color(0, 128, 0));
        }
        jLabel110.setText("Trust Score: "+ trustScore_5.toUpperCase());


/*---------------------------------------------------------------------------------------------------------------------*/

        // 6 EL IMG

        jLabel48.setText("Coin Full Name: "+tr.getCoins().get(5).getItem().getName());
        jLabel70.setText("Coin ID: "+tr.getCoins().get(5).getItem().getId());
        jLabel49.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                            new java.net.URL(tr.getCoins().get(5).getItem().getLarge())
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel71.setText("Market Capacity Rank: " + tr.getCoins().get(5).getItem().getMarketCapRank());

        final String hashingAlgorithmSIXTH = client.getCoinById(tr.getCoins().get(5).getItem().getId()).getHashingAlgorithm();
        final double priceChangePercenta24h_6 = client.getCoinById(tr.getCoins().get(5).getItem().getId()).getMarketData().getPriceChangePercentage24h();
        final String trustScore_6 = client.getCoinById(tr.getCoins().get(5).getItem().getId()).getTickers().get(0).getTrustScore();
        if(hashingAlgorithmSIXTH != null)
        {
            jLabel72.setText("Hashing Algorithm: " + hashingAlgorithmSIXTH);
        }
        else
        {
            jLabel72.setText("Hashing Algorithm is not described");
        }

        jLabel104.setText(priceChangePercenta24h_6 +"%");
        if(priceChangePercenta24h_6 <= 0)
        {
            jLabel104.setForeground(Color.RED);
        }else if(priceChangePercenta24h_6 > 0)
        {
            jLabel104.setForeground(new Color(0, 128, 0));
        }
        jLabel73.setText("Trust Score: "+ trustScore_6.toUpperCase());




/*---------------------------------------------------------------------------------------------------------------------*/

        // 7 EL IMG
        jLabel56.setText("Coin Full Name: "+tr.getCoins().get(6).getItem().getName());
        jLabel98.setText("Coin ID: "+tr.getCoins().get(6).getItem().getId());
        jLabel69.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                            new java.net.URL(tr.getCoins().get(6).getItem().getLarge())
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel99.setText("Market Capacity Rank: " + tr.getCoins().get(6).getItem().getMarketCapRank());

        final String hashingAlgorithmSEVEN = client.getCoinById(tr.getCoins().get(6).getItem().getId()).getHashingAlgorithm();
        final double priceChangePercenta24h_7 = client.getCoinById(tr.getCoins().get(6).getItem().getId()).getMarketData().getPriceChangePercentage24h();
        final String trustScore_7 = client.getCoinById(tr.getCoins().get(6).getItem().getId()).getTickers().get(0).getTrustScore();
        if(hashingAlgorithmSEVEN != null)
        {
            jLabel100.setText("Hashing Algorithm: " + hashingAlgorithmSEVEN);
        }
        else
        {
            jLabel100.setText("Hashing Algorithm is not described");
        }

        jLabel103.setText(priceChangePercenta24h_7 +"%");
        if(priceChangePercenta24h_7 <= 0)
        {
            jLabel103.setForeground(Color.RED);
        }else if(priceChangePercenta24h_7 > 0)
        {
            jLabel103.setForeground(new Color(0, 128, 0));
        }
        jLabel101.setText("Trust Score: "+ trustScore_7.toUpperCase());
        /*---------------------------------------------------------------------------------------------------------------------*/

    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cryptoPopularContainer8.setVisible(false);

        client.ping();
//        client.getTrending()

        final CoinFullData coinFullData = client.getCoinById((String) jComboBox1.getSelectedItem());
        cryptoPopularContainer8.setVisible(true);
        jLabel41.setText("Coin Full Name: "+coinFullData.getName());
        jLabel62.setText("Coin ID: "+coinFullData.getId());
        jLabel42.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                            new java.net.URL(coinFullData.getImage().getLarge())
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        if(coinFullData.getHashingAlgorithm() != null)
        {
            jLabel45.setText("Hashing Algorithm: " + coinFullData.getHashingAlgorithm());
        }
        else
        {
            jLabel45.setText("Hashing Algorithm is not described");
        }

        jLabel51.setText("Current Price (USD): " + client.getPrice(jComboBox1.getSelectedItem().toString(), Currency.USD).get(jComboBox1.getSelectedItem().toString()).get(Currency.USD));
        jLabel52.setText("Market Capacity Rank: " + coinFullData.getMarketCapRank());
        jLabel55.setText(coinFullData.getMarketData().getPriceChangePercentage24h() +"%");
        if(coinFullData.getMarketData().getPriceChangePercentage24h() <= 0)
        {
            jLabel55.setForeground(Color.RED);
        }else if(coinFullData.getMarketData().getPriceChangePercentage24h() > 0)
        {
            jLabel55.setForeground(new Color(0, 128, 0));
        }
        jLabel53.setText("Trust Score: "+ coinFullData.getTickers().get(0).getTrustScore().toUpperCase());

        // CHARTS BELOW
        // CHARTS BELOW

        long unixTime = System.currentTimeMillis() / 1000L;

        MarketChart dailyPrice = client.getCoinMarketChartRangeById(coinFullData.getId(), "usd", Long.toString( unixTime- 86400), Long.toString(unixTime));

        List<List<String>> lls = dailyPrice.getPrices();

        System.out.println(lls.size());
        double[] xData = new double[] { 0.0, 1.0, 2.0 };
        double[] yData = new double[] { 2.0, 1.0, 0.0 };

// Create Chart

        XYChart chart = QuickChart.getChart("Sample Chart", "X", "Y", "y(x)", xData, yData);

        JPanel chartPanel = new XChartPanel<XYChart>(chart);
        jPanelChartSearch.add(chartPanel, BorderLayout.CENTER);

        // label
        JLabel label = new JLabel("Blah blah blah.", SwingConstants.CENTER);
        jPanelChartSearch.add(label, BorderLayout.SOUTH);

        // Display the window.
        jPanelChartSearch.setVisible(true);





    }//GEN-LAST:event_jButton1ActionPerformed

    private void addNotificationToNotificationBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNotificationToNotificationBoardActionPerformed
        TriggerEntity triggerEntity = new TriggerEntity(
                Double.parseDouble(triggersPanelLowerBound_input.getText()),
                Double.parseDouble(triggersPanelUpperBound_input.getText()),
                triggersPanelCoinID_input.getText()
        );
        long currentId = id++;
        triggerEntity.setId(currentId);
        triggerManager.add(triggerEntity);
        redrawTriggers();
    }//GEN-LAST:event_addNotificationToNotificationBoardActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:


    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private Component createComponentFavourite(FavoutireEntity favoutireEntity) {
        JPanel jPanel = new JPanel();
        jPanel.setLayout(new BoxLayout(jPanel, BoxLayout.X_AXIS));
        jPanel.setMaximumSize(new Dimension(1400, 50));
        JLabel tempJlabel = new JLabel(" Coin name: " + favoutireEntity.getCoinId() +" Coin ID:[" + favoutireEntity.getCoinName() + "], Hashing ALG:[" + favoutireEntity.getHashingAlgorithm() + "], Trust Score: "+favoutireEntity.getTrustScore());
        tempJlabel.setFont(new Font("Helvetica Neue", 0, 18));

        JButton jButton = new JButton();
        jButton.setText("DEL");
        jButton.setMaximumSize(new Dimension(100, 40));
        jButton.addActionListener(ae -> {
            favoutireManager.remove(favoutireEntity.getId());
            redrawFavourite();
        });

        jPanel.add(jButton);
        jPanel.add(tempJlabel);

        return jPanel;
    }

    private void redrawFavourite() {
        favouritePanelBoard.removeAll();
        for (FavoutireEntity favEnt : favoutireManager.getMap().values()) {
            favouritePanelBoard.add(createComponentFavourite(favEnt));
        }
        favouritePanelBoard.updateUI();
        //triggersPanelNotificationBoard.remo
    }

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        notifierDaemon.setActive(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        final CoinFullData coinFullData = client.getCoinById((String) jComboBox1.getSelectedItem());

        FavoutireEntity favoutireEntity = new FavoutireEntity(
                coinFullData.getName(),
                coinFullData.getId(),
                coinFullData.getHashingAlgorithm(),
                coinFullData.getTickers().get(0).getTrustScore()
        );
        long currentFavId = favId++;
        favoutireEntity.setId(currentFavId);
        favoutireManager.add(favoutireEntity);
        redrawFavourite();
    }//GEN-LAST:event_jButton2ActionPerformed

    private long id = 1L;
    private long favId = 1L; // ID FOR FAVOURITE ENTITIES;

    private Component createComponent(TriggerEntity te) {
        JPanel jPanel = new JPanel();
        jPanel.setLayout(new BoxLayout(jPanel, BoxLayout.X_AXIS));
        jPanel.setMaximumSize(new Dimension(1400, 50));
        JLabel tempJlabel = new JLabel("    Coin ID: " + te.getCoinID() +" Price Lower Bound:[" + te.getPriceLowerBound() + "], Price Upper Bound:[" + te.getPriceUpperBound() + "]");
        tempJlabel.setFont(new Font("Helvetica Neue", 0, 18));

        JButton jButton = new JButton();
        jButton.setText("DEL");
        jButton.setMaximumSize(new Dimension(100, 40));
        jButton.addActionListener(ae -> {
            triggerManager.remove(te.getId());
            redrawTriggers();
        });

        jPanel.add(jButton);
        jPanel.add(tempJlabel);

        return jPanel;
    }

    private void redrawTriggers() {
        triggersPanelNotificationBoard.removeAll();
        for (TriggerEntity te : triggerManager.getMap().values()) {
            triggersPanelNotificationBoard.add(createComponent(te));
        }
        triggersPanelNotificationBoard.updateUI();
        //triggersPanelNotificationBoard.remo
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CryptoGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CryptoGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CryptoGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CryptoGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            var gui = new CryptoGui();
            gui.setSize(1400, 700);
            gui.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNotificationToNotificationBoard;
    private javax.swing.JPanel cryptoPopularContainer10;
    private javax.swing.JPanel cryptoPopularContainer11;
    private javax.swing.JPanel cryptoPopularContainer12;
    private javax.swing.JPanel cryptoPopularContainer13;
    private javax.swing.JPanel cryptoPopularContainer14;
    private javax.swing.JPanel cryptoPopularContainer15;
    private javax.swing.JPanel cryptoPopularContainer16;
    private javax.swing.JPanel cryptoPopularContainer8;
    private javax.swing.JPanel favouritePanelBoard;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelChartSearch;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel menuFavouritePanel;
    private javax.swing.JPanel menuFavouritePanelInnerHeader;
    private javax.swing.JPanel menuPopularPanel;
    private javax.swing.JPanel menuPopularPanelInnerHeader;
    private javax.swing.JPanel menuSearchPanel;
    private javax.swing.JPanel menuSearchPanelInnerHeader;
    private javax.swing.JPanel menuSettingsPanel;
    private javax.swing.JPanel menuSettingsPanelInnerHeader;
    private javax.swing.JPanel menuTriggersPanel;
    private javax.swing.JPanel menuTriggersPanelInnerHeader;
    private javax.swing.JPanel pnlRoot;
    private javax.swing.JPanel popularCryptoPanel;
    private javax.swing.JLabel triggersPanelCoinID_info;
    private javax.swing.JTextField triggersPanelCoinID_input;
    private javax.swing.JLabel triggersPanelLowerBound_info;
    private javax.swing.JTextField triggersPanelLowerBound_input;
    private javax.swing.JPanel triggersPanelNotificationBoard;
    private javax.swing.JLabel triggersPanelText;
    private javax.swing.JLabel triggersPanelUpperBound_info;
    private javax.swing.JTextField triggersPanelUpperBound_input;
    // End of variables declaration//GEN-END:variables
}
